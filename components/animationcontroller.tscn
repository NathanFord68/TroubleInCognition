[gd_scene load_steps=2 format=3 uid="uid://k8h0jvyr87bd"]

[sub_resource type="GDScript" id="GDScript_qav2t"]
resource_name = "animationcontroller"
script/source = "extends Node

@onready var player = get_parent().get_parent()
var timer = Timer.new()
var can_idle = true

func _ready():
	timer.timeout.connect(_handle_time_out)

func handle_idle():
	if !can_idle:
		return
		
	if !is_instance_valid(player.get_node(\"AnimationPlayer\")):
		return
	player.get_node(\"AnimationPlayer\").play(\"Idle\")
	
	if is_instance_valid(player.equipped):
		player.equipped.get_node(\"AnimationPlayer\").play(\"Idle\")
	
func handle_walk_forward():
	player.get_node(\"AnimationPlayer\").play(\"Walk-Forward\")
	
	if is_instance_valid(player.equipped):
		player.equipped.get_node(\"AnimationPlayer\").play(\"Walk-Forward\")

func handle_swing():
	if !is_instance_valid(player.equipped):
		return
		
	can_idle = false
	timer.start(.5)
	
	player.get_node(\"AnimationPlayer\").play(\"Swing\")
	player.equipped.get_node(\"AnimationPlayer\").play(\"Swing\")

func handle_flip(v):
	# Flip the parent
	if !is_instance_valid(player.get_node(\"Sprite2D\")):
		return
	player.get_node(\"Sprite2D\").flip_h = false
	if v.x > 0:
		player.get_node(\"Sprite2D\").flip_h = true
	
	# Flip equipped
	if is_instance_valid(player.equipped):
		player.equipped.get_node(\"Sprite2D\").flip_h = false
	
	if is_instance_valid(player.equipped) and v.x > 0:
		player.equipped.get_node(\"Sprite2D\").flip_h = true
		
func _handle_time_out():
	can_idle = true
"

[node name="Animationcontroller" type="Node"]
script = SubResource("GDScript_qav2t")
