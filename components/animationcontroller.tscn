[gd_scene load_steps=2 format=3 uid="uid://k8h0jvyr87bd"]

[sub_resource type="GDScript" id="GDScript_qav2t"]
resource_name = "animationcontroller"
script/source = "extends Node

@onready var player = get_parent()

func handle_idle():		
	player.get_node(\"AnimationTree\").set(\"parameters/Idle-WalkForward/blend_amount\", 0)
	
	for e in $\"../Equipment\".get_children():
		e.get_node(\"AnimationTree\").set(\"parameters/Idle-WalkForward/blend_amount\", 0)
	
func handle_walk_forward():
	player.get_node(\"AnimationTree\").set(\"parameters/Idle-WalkForward/blend_amount\", 1)
	
	for e in $\"../Equipment\".get_children():
		e.get_node(\"AnimationTree\").set(\"parameters/Idle-WalkForward/blend_amount\", 1)

func handle_swing():
	if !is_instance_valid($\"../Equipment\".get_node(str(Item.TYPE.PRIMARY))):
		return
		
	player.get_node(\"AnimationTree\").set(\"parameters/OneShotSwing/request\", AnimationNodeOneShot.ONE_SHOT_REQUEST_FIRE)
	$\"../Equipment\".get_node(str(Item.TYPE.PRIMARY)).get_node(\"AnimationTree\").set(\"parameters/OneShotSwing/request\", AnimationNodeOneShot.ONE_SHOT_REQUEST_FIRE)

#DEPRICATED going to make animations for each direction
func handle_flip(v):
	# Flip the parent
	if !is_instance_valid(player.get_node(\"Sprite2D\")):
		return
		
	player.get_node(\"Sprite2D\").flip_h = false
	if v.x > 0:
		player.get_node(\"Sprite2D\").flip_h = true
	
	# Flip equipped
	for e in $\"../Equipment\".get_children():
		e.get_node(\"PlayerGen\").flip_h = false
	
	if v.x > 0:
		for e in $\"../Equipment\".get_children():
			e.get_node(\"PlayerGen\").flip_h = false
"

[node name="Animationcontroller" type="Node"]
script = SubResource("GDScript_qav2t")
